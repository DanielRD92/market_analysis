# Nombre del workflow
name: Build and Deploy to GitHub Pages

# Se ejecuta en cada push a la rama 'main'
on:
  push:
    branches:
      - main

# Permisos necesarios para que el workflow pueda leer el contenido del repo y escribir en la rama gh-pages
permissions:
  contents: write

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest
    steps:
      # 1. Checkout del repositorio
      # Descarga el código de tu rama 'main' para que el runner pueda usarlo
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2. Configurar Python
      # Instala la versión de Python que necesitamos
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: '3.12'

      # 3. Instalar dependencias
      # Lee el fichero requirements.txt y instala las librerías necesarias (como Jinja2)
      # Asegúrate de tener un fichero 'requirements.txt' en tu repositorio
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install -r requirements.txt

      # 4. Ejecutar el script de construcción
      # Esto genera la carpeta 'dist' con el nuevo index.html y los informes archivados
      - name: Run build script
        run: python build.py

      # 5. Desplegar en GitHub Pages
      # Sube el contenido de la carpeta 'dist' a la rama 'gh-pages'
      - name: Deploy to GitHub Pages
        uses: peaceiris/actions-gh-pages@v4
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          publish_dir: ./dist
          keep_files: true # <-- ¡ESTA ES LA LÍNEA CLAVE! Evita que se borren los informes antiguos.
#TODO generar un token en githubfeat: A